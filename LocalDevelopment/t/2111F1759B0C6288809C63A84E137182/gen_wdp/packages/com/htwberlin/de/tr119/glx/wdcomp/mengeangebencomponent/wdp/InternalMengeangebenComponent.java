
// ---------------------------------------------------------------------------
// This file has been generated by the Web Dynpro Code Generator
// DON'T MODIFY!!! CHANGES WILL BE LOST WHENEVER THE FILE GETS GENERATED AGAIN
//
// $JL-GENERATED-SOURCE$
// ---------------------------------------------------------------------------
package com.htwberlin.de.tr119.glx.wdcomp.mengeangebencomponent.wdp;

import com.sap.tc.cmi.metadata.CMICardinality;
import com.sap.tc.webdynpro.progmodel.api.*;
import com.sap.tc.webdynpro.progmodel.gci.*;
import com.sap.tc.webdynpro.progmodel.context.*;

@SuppressWarnings("all")
public class InternalMengeangebenComponent
  extends com.sap.tc.webdynpro.progmodel.gci.impl.GCIComponentController
  implements IPrivateMengeangebenComponent, com.sap.tc.webdynpro.progmodel.gci.IGCIComponentDelegate
{
  private static final long serialVersionUID = 0x90136e07e076c809L;

  /**
   * Framework implementation of Controller that delegates to this.
   */
  private final com.sap.tc.webdynpro.progmodel.gci.IGCIComponent wdAlterEgo;

  /**
   * Delegate that implements application defined logic.
   */
  private final com.htwberlin.de.tr119.glx.wdcomp.mengeangebencomponent.MengeangebenComponent delegate;


  // ---- Context --------------------------------------------------------------

  IGCINodeInfo infoContext;

  {

    infoContext = GCIContext.createValueNode("Context", true, CMICardinality.ONE, CMICardinality.ONE, true, null,
      new IGCIAttributeInfo[] {
        GCIContext.createAttribute("preis", "ddic:com.sap.dictionary.integer", null, null, false, null),
        GCIContext.createAttribute("Menge", "ddic:com.sap.dictionary.integer", null, null, false, null),
        GCIContext.createAttribute("lieferzeitInTagen", "ddic:com.sap.dictionary.integer", null, null, false, null),
        GCIContext.createAttribute("artikelnummer", "ddic:com.sap.dictionary.string", null, null, false, null),
        GCIContext.createAttribute("waehrung", "ddic:com.sap.dictionary.string", null, null, false, null),
      },
      (IGCINodeInfo[])null // no child nodes
    );

  }
  
  private IContextNode contextNode;

  private void wdInitContextNode() {
    contextNode = new IContextNode(this, infoContext, (Node)null);
  }

  public IWDNode wdGetRootNode() {
    return contextNode;
  }

  public IContextNode wdGetContext() {
    return contextNode;
  }


  // ---- Actions --------------------------------------------------------------

  /**
   * Create a new action for this controller. A unique name for the action is generated automatially.
   * @param eventHandler is the action's eventhandler with proper signature
   * @param text is the text displayed in the UI element triggering this action
   */
  public IWDAction wdCreateAction(WDActionEventHandler eventHandler, String text) {
    return wdAlterEgo.createAction(null, eventHandler, text, null);
  }

  /**
   * Create a new action with the given name for this controller.
   * @param eventHandler is the action's eventhandler with proper signature
   * @param name is the action's name
   * @param text is the text displayed in the UI element triggering this action
   */
  public IWDAction wdCreateNamedAction(WDActionEventHandler eventHandler, String name, String text) {
    return wdAlterEgo.createAction(name, eventHandler, text, null);
  }
  
  // ---- Controller part ------------------------------------------------------

  /**
   * Creates a new instance of this controller.
   */
  public InternalMengeangebenComponent(com.sap.tc.webdynpro.progmodel.gci.IGCIComponent alterEgo) {
    super(alterEgo);
    this.wdAlterEgo = alterEgo;
    wdInitContextNode();
    this.delegate = new com.htwberlin.de.tr119.glx.wdcomp.mengeangebencomponent.MengeangebenComponent((IPrivateMengeangebenComponent) this);
  }

  /**
   * Returns the public API for this controller instance.
   */
  public com.sap.tc.webdynpro.progmodel.api.IWDComponent wdGetAPI() {
    return (com.sap.tc.webdynpro.progmodel.api.IWDComponent) wdAlterEgo;
  }

  /**
   * Hook method called to initialize component controller.
   */
  public void wdDoInit() {
    delegate.wdDoInit();
  }

  /**
   * Hook method called to clean up component controller.
   */
  public void wdDoExit() {
    delegate.wdDoExit();
  }

  /**
   * Hook called by framework in a request/response cycle each time before rendering starts.
   */
  public void wdDoPostProcessing(boolean isCurrentRoot) {
    delegate.wdDoPostProcessing(isCurrentRoot);
  }

  /**
   * Hook called by framework in a request/response cycle each time before the navigation queue is processed.
   */
  public void wdDoBeforeNavigation(boolean isCurrentRoot) {
    delegate.wdDoBeforeNavigation(isCurrentRoot);
  }
  
  /**
   * Hook called by framework when an application state change occurs.
   */
  public void wdDoApplicationStateChange(IWDApplicationStateChangeInfo stateChangeInfo, IWDApplicationStateChangeReturn stateChangeReturn)
  {
    delegate.wdDoApplicationStateChange(stateChangeInfo, stateChangeReturn);
  }
  
  public void fireMengeangebenCompleteEvent( ) {
    delegate.fireMengeangebenCompleteEvent();
  }

  public void fireMengeangebenErrorEvent( ) {
    delegate.fireMengeangebenErrorEvent();
  }

  public Object wdInvokeEventHandler(String handlerName, IWDCustomEvent event)
    throws NoSuchMethodException {
    
      throw new NoSuchMethodException("Eventhandler " + handlerName + " not found for event " + event.getName());
  }

  // initialize the method table for method invokation method
  private static final java.util.Map<String, Integer> wdMethodMap = new java.util.HashMap<String, Integer>(2, 1F);
  static {
    wdMethodMap.put("fireMengeangebenCompleteEvent", Integer.valueOf(0));
    wdMethodMap.put("fireMengeangebenErrorEvent", Integer.valueOf(1));
  }
  
  public final java.util.Map<String, Integer> wdGetMethodMap() {
     return wdMethodMap;
  }
  
  public Object wdInvokeMethod(int methodNr, Object[] args) throws Throwable {
    
      Object result = null;
      switch(methodNr) {
        case 0: 
          delegate.fireMengeangebenCompleteEvent();
          return result;
        case 1: 
          delegate.fireMengeangebenErrorEvent();
          return result;
        default: 
          throw new NoSuchMethodException("Internal Error in generated code: Method nr " + methodNr + " not found.");
      }
  }

  /* fire event. */
  public void wdFireEventMengeangebenCompleteEvent( ) {
    java.util.Map<String, Object> parameters = java.util.Collections.emptyMap();
    wdAlterEgo.getComponentGCI().fireEvent("MengeangebenComponent", "MengeangebenCompleteEvent", parameters);
  }
  
  /* fire event. */
  public void wdFireEventMengeangebenErrorEvent( ) {
    java.util.Map<String, Object> parameters = java.util.Collections.emptyMap();
    wdAlterEgo.getComponentGCI().fireEvent("MengeangebenComponent", "MengeangebenErrorEvent", parameters);
  }
  

}
